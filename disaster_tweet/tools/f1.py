import numpy as np
from sklearn.metrics import f1_score
import sys

task = sys.argv[1]
algo = sys.argv[2]
run = int(sys.argv[3])

assert task == 'humanitarian' or task == 'informative'
assert run == 1 or run == 2

if task == 'humanitarian':
    class_counts = np.array([504, 235, 126, 81, 9])

    if algo == 'fixmatch-supervised':
        if run == 1:
            confusion_matrix = [[0.90239044, 0.02788845, 0.0438247,  0.02191235, 0.00398406],
                [0.17021277, 0.81276596, 0.00425532, 0.01276596, 0.        ],
                [0.112,      0.008,      0.864,      0.008,      0.008     ],
                [0.03703704, 0.,         0.04938272, 0.88888889, 0.02469136],
                [0.11111111, 0.,         0.11111111, 0.11111111, 0.66666667]]
        elif run == 2:
            confusion_matrix = [[0.91832669, 0.01593625, 0.0438247,  0.01792829, 0.00398406],
                [0.21276596, 0.76595745, 0.00851064, 0.01276596, 0.        ],
                [0.176,      0.,         0.816,      0.008,      0.,        ],
                [0.0617284,  0.,         0.01234568, 0.90123457, 0.02469136],
                [0.33333333, 0.,         0.,         0.11111111, 0.55555556]]

    elif algo == 'fixmatch-hard':
        if run == 1:
            confusion_matrix = [[0.88645418, 0.0438247,  0.05577689, 0.01195219, 0.00199203],
                [0.1106383,  0.86382979, 0.01702128, 0.00851064, 0.        ],
                [0.088,      0.,         0.912,      0.,         0.,        ],
                [0.04938272, 0.01234568, 0.01234568, 0.91358025, 0.01234568],
                [0.33333333, 0.,         0.22222222, 0.11111111, 0.33333333]]
        elif run == 2:
            confusion_matrix = [[0.89043825, 0.05378486, 0.04581673, 0.00996016, 0.        ],
                [0.08510638, 0.89361702, 0.00851064, 0.01276596, 0.        ],
                [0.088,      0.016,      0.888,      0.008,      0.        ],
                [0.01234568, 0.01234568, 0.02469136, 0.95061728, 0.        ],
                [0.22222222, 0.,         0.22222222, 0.33333333, 0.22222222]]
            
    elif algo == 'fixmatch-soft':
        if run == 1:
            confusion_matrix = [[0.87848606, 0.03984064, 0.06972112, 0.00796813, 0.00398406],
                [0.09361702, 0.88085106, 0.01276596, 0.01276596, 0.        ],
                [0.048,      0.,         0.944,      0.,         0.008,     ],
                [0.04938272, 0.,         0.02469136, 0.90123457, 0.02469136],
                [0.11111111, 0.,         0.22222222, 0.22222222, 0.44444444]]
        elif run == 2:
            confusion_matrix = [[0.91633466, 0.0438247,  0.03386454, 0.00398406, 0.00199203],
                [0.1106383,  0.85957447, 0.01702128, 0.01276596, 0.        ],
                [0.128,      0.,         0.864,      0.,         0.008     ],
                [0.04938272, 0.01234568, 0.02469136, 0.88888889, 0.02469136],
                [0.11111111, 0.,         0.44444444, 0.11111111, 0.33333333]]
            
    elif algo == 'flexmatch':
        if run == 1:
            confusion_matrix = [[0.87051793, 0.02988048, 0.05577689, 0.02988048, 0.01394422],
                [0.11489362, 0.80425532, 0.04680851, 0.0212766,  0.01276596],
                [0.072,      0.,         0.872,      0.016,      0.04,      ],
                [0.03703704, 0.,         0.01234568, 0.91358025, 0.03703704],
                [0.,         0.,         0.11111111, 0.22222222, 0.66666667]]
        elif run == 2:
            confusion_matrix = [[0.83864542, 0.03187251, 0.05976096, 0.03585657, 0.03386454],
                [0.08085106, 0.83404255, 0.03829787, 0.01702128, 0.02978723],
                [0.056,      0.,         0.872,      0.016,      0.056     ],
                [0.02469136, 0.,         0.01234568, 0.9382716,  0.02469136],
                [0.,         0.,         0.22222222, 0.22222222, 0.55555556]]
            
    elif algo == 'freematch':
        if run == 1:
            confusion_matrix = [[0.85059761, 0.0438247,  0.06175299, 0.03187251, 0.01195219],
                [0.08510638, 0.84255319, 0.03829787, 0.01276596, 0.0212766 ],
                [0.08,       0.,         0.872,      0.024,      0.024,     ],
                [0.03703704, 0.,         0.03703704, 0.88888889, 0.03703704],
                [0.11111111, 0.,         0.11111111, 0.22222222, 0.55555556]]
        elif run == 2:
            confusion_matrix = [[0.84063745, 0.03585657, 0.08167331, 0.02191235, 0.01992032],
                [0.1106383,  0.82553191, 0.03829787, 0.01276596, 0.01276596],
                [0.056,      0.,         0.912,      0.016,      0.016     ],
                [0.04938272, 0.,         0.03703704, 0.88888889, 0.02469136],
                [0.,         0.,         0.44444444, 0.22222222, 0.33333333]]

    elif algo == 'multihead':
        if run == 1:
            confusion_matrix = [[0.93824701, 0.01992032, 0.03187251, 0.00996016, 0.        ],
                [0.21702128, 0.74893617, 0.00851064, 0.0212766,  0.00425532],
                [0.088,      0.,         0.912,      0.,         0.,        ],
                [0.04938272, 0.,         0.01234568, 0.91358025, 0.02469136],
                [0.22222222, 0.,         0.11111111, 0.,         0.66666667]]
        elif run == 2:
            confusion_matrix = [[0.92031873, 0.02191235, 0.04183267, 0.01394422, 0.00199203],
                [0.15744681, 0.82553191, 0.00851064, 0.00851064, 0.        ],
                [0.152,      0.,         0.848,      0.,         0.,        ],
                [0.04938272, 0.,         0.02469136, 0.91358025, 0.01234568],
                [0.11111111, 0.,         0.11111111, 0.22222222, 0.55555556]]
            
    elif algo == 'multihead-apm-agree-5':
        if run == 1:
            confusion_matrix = [[0.91035857, 0.02589641, 0.04780876, 0.01593625, 0.        ],
                [0.13617021, 0.82978723, 0.0212766,  0.01276596, 0.        ],
                [0.048,      0.,         0.952,      0.,         0.,        ],
                [0.0617284,  0.,         0.01234568, 0.92592593, 0.        ],
                [0.11111111, 0.,         0.22222222, 0.22222222, 0.44444444]]
        elif run == 2:
            confusion_matrix = [[0.93227092, 0.02390438, 0.03386454, 0.00796813, 0.00199203],
                [0.16170213, 0.82553191, 0.01276596, 0.,         0.        ],
                [0.088,      0.,         0.904,      0.,         0.008,     ],
                [0.07407407, 0.01234568, 0.01234568, 0.87654321, 0.02469136],
                [0.22222222, 0.,         0.22222222, 0.,         0.55555556]]

    elif algo == 'multihead-apm-agree-5-no-low':
        if run == 1:
            confusion_matrix = [[0.94422311, 0.02191235, 0.02191235, 0.01195219, 0.        ],
                [0.14893617, 0.82978723, 0.00851064, 0.00851064, 0.00425532],
                [0.136,      0.,         0.864,      0.,         0.,        ],
                [0.03703704, 0.,         0.,         0.92592593, 0.03703704],
                [0.22222222, 0.,         0.22222222, 0.,         0.55555556]]
        elif run == 2:
            confusion_matrix = [[0.9123506,  0.03187251, 0.03984064, 0.01593625, 0.        ],
                [0.14468085, 0.83829787, 0.00851064, 0.00851064, 0.        ],
                [0.072,      0.,         0.92,       0.,         0.008     ],
                [0.04938272, 0.01234568, 0.01234568, 0.90123457, 0.02469136],
                [0.11111111, 0.,         0.11111111, 0.22222222, 0.55555556]]
    
    elif algo == 'multihead-apm-no-agree-5':
        if run == 1:
            confusion_matrix = [[0.93027888, 0.02390438, 0.03585657, 0.00996016, 0.        ],
                [0.14468085, 0.83404255, 0.01702128, 0.00425532, 0.        ],
                [0.112,      0.,         0.872,      0.,         0.016     ],
                [0.07407407, 0.,         0.01234568, 0.88888889, 0.02469136],
                [0.22222222, 0.,         0.11111111, 0.11111111, 0.55555556]]
        
        elif run == 2:
            confusion_matrix = [[0.89641434, 0.03984064, 0.05577689, 0.0059761,  0.00199203],
                [0.13617021, 0.82978723, 0.02553191, 0.00851064, 0.        ],
                [0.04,       0.,         0.952,      0.,         0.008     ],
                [0.0617284,  0.01234568, 0.03703704, 0.86419753, 0.02469136],
                [0.22222222, 0.,         0.22222222, 0.11111111, 0.44444444]]
            
    elif algo == 'multihead-apm-no-agree-5-no-low':
        if run == 1:
            confusion_matrix = [[0.93227092, 0.02390438, 0.03187251, 0.00996016, 0.00199203],
                [0.15319149, 0.81276596, 0.0212766,  0.01276596, 0.        ],
                [0.12,       0.,         0.864,      0.,         0.016     ],
                [0.03703704, 0.,         0.01234568, 0.9382716,  0.01234568],
                [0.22222222, 0.,         0.11111111, 0.11111111, 0.55555556]]
        
        elif run == 2:
            confusion_matrix = [[0.91035857, 0.03984064, 0.03187251, 0.01792829, 0.        ],
                [0.1106383,  0.87234043, 0.00851064, 0.00851064, 0.        ],
                [0.16,       0.008,      0.832,      0.,         0.,        ],
                [0.0617284,  0.,         0.01234568, 0.92592593, 0.        ],
                [0.22222222, 0.,         0.22222222, 0.11111111, 0.44444444]]

    else:
        assert False

elif task == 'informative':
    class_counts = np.array([1030, 504])

    if algo == 'fixmatch-supervised':
        if run == 1:
            confusion_matrix = [[0.95224172, 0.04775828],
                [0.1812749,  0.8187251 ]]
        elif run == 2:
            confusion_matrix = [[0.96003899, 0.03996101],
                [0.24701195, 0.75298805]]

    elif algo == 'fixmatch-hard':
        if run == 1:
            confusion_matrix = [[0.94152047, 0.05847953],
                [0.187251,   0.812749  ]]
        elif run == 2:
            confusion_matrix = [[0.94054581, 0.05945419],
                [0.18326693, 0.81673307]]
            
    elif algo == 'fixmatch-soft':
        if run == 1:
            confusion_matrix = [[0.94249513, 0.05750487],
                [0.16334661, 0.83665339]]
        elif run == 2:
            confusion_matrix = [[0.93664717, 0.06335283],
                [0.1752988,  0.8247012 ]]
            
    elif algo == 'flexmatch':
        if run == 1:
            confusion_matrix =  [[0.93664717, 0.06335283],
                [0.16533865, 0.83466135]]
        elif run == 2:
            confusion_matrix = [[0.92007797, 0.07992203],
                [0.14741036, 0.85258964]]
            
    elif algo == 'freematch':
        if run == 1:
            confusion_matrix = [[0.92982456, 0.07017544],
                [0.13346614, 0.86653386]]
        elif run == 2:
            confusion_matrix = [[0.90838207, 0.09161793],
                [0.12350598, 0.87649402]]

    elif algo == 'multihead':
        if run == 1:
            confusion_matrix = [[0.93469786, 0.06530214],
                [0.15338645, 0.84661355]]
        elif run == 2:
            confusion_matrix = [[0.94346979, 0.05653021],
                [0.16533865, 0.83466135]]
            
    elif algo == 'multihead-apm-agree-5':
        if run == 1:
            confusion_matrix = [[0.95419103, 0.04580897],
                [0.18326693, 0.81673307]]
        elif run == 2:
            confusion_matrix = [[0.96003899, 0.03996101],
                [0.20119522, 0.79880478]]
    
    elif algo == 'multihead-apm-agree-5-no-low':
        if run == 1:
            confusion_matrix = [[0.9454191,  0.0545809 ],
                [0.14940239, 0.85059761]]
        elif run == 2:
            confusion_matrix = [[0.94249513, 0.05750487],
                [0.15537849, 0.84462151]]
    
    elif algo == 'multihead-apm-no-agree-5':
        if run == 1:
            confusion_matrix = [[0.95516569, 0.04483431],
                [0.187251,   0.812749  ]]
        
        elif run == 2:
            confusion_matrix = [[0.9502924,  0.0497076 ],
                [0.18525896, 0.81474104]]
            
    elif algo == 'multihead-apm-no-agree-5-no-low':
        if run == 1:
            confusion_matrix = [[0.97173489, 0.02826511],
                [0.22709163, 0.77290837]]
        
        elif run == 2:
            confusion_matrix = [[0.94054581, 0.05945419],
                [0.17131474, 0.82868526]]
    
    else:
        assert False



# Calculate F1 score for each class
true_labels = []
pred_labels = []

for i in range(len(confusion_matrix)):
    true_labels.extend([i] * class_counts[i])
    for j in range(len(confusion_matrix[i])):
        pred_labels.extend([j] * round(confusion_matrix[i][j] * class_counts[i]))

assert len(true_labels) == len(pred_labels)

# Using scikit-learn to calculate the overall F1 score (macro, micro, or weighted)
f1_macro = f1_score(true_labels, pred_labels, average='macro')
f1_micro = f1_score(true_labels, pred_labels, average='micro')
f1_weighted = f1_score(true_labels, pred_labels, average='weighted')

print(f'F1 Score (Macro): {f1_macro}')
print(f'F1 Score (Micro): {f1_micro}')
print(f'F1 Score (Weighted): {f1_weighted}')